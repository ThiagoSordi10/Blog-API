version: '3.8'

services:
  # Django web application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      # Bind mount for development (live code changes)
      - .:/app
      # Exclude unnecessary directories and files
      - /app/__pycache__
      - /app/.pytest_cache
      - /app/htmlcov
    environment:
      - DJANGO_SETTINGS_MODULE=settings.dev
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG:-True}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - DB_NAME=${DB_NAME:-blog_api}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_HOST=db
      - DB_PORT=${DB_PORT:-5432}
      - REDIS_URL=redis://redis:6379
      - SECURE_SSL_REDIRECT=${SECURE_SSL_REDIRECT:-False}
    depends_on:
      - db
      - redis
    command: >
      sh -c "
        python manage.py migrate &&
        gunicorn blog_api.wsgi:application -b 0.0.0.0:8000 --reload
      "
    restart: unless-stopped

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${DB_NAME:-blog_api}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data: 